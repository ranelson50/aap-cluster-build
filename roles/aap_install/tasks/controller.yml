---
- name: Template inventory file for Ansible Controller Install
  template:
    src: "controller_install.j2"
    dest: "{{ aap_dir }}/inventory"

- name: Run the Automation Controller installer
  shell: "{{ controller_install_command }}"
  args:
    chdir: "{{ aap_dir }}"
  async: 1800
  poll: 60

- name: Wait for Automation Controller to be up
  uri:
    url: https://localhost/api/v2/ping/
    method: GET
    user: admin
    password: "{{ admin_password }}"
    validate_certs: false
  register: check2
  until: check2.json is defined and check2.json.instances[0].capacity > 0 and check2.json.instance_groups[0].capacity > 0
  retries: 60
  delay: 10

- name: Display /api/v2/ping results
  debug:
    msg: '{{ check2.json }}'

# TODO: Craft block to pull manifest using access.redhat.com API

- name: Load license block
  block:
    - name: check for base64 variable first
      copy:
        dest: '{{ playbook_dir }}/manifest.zip'
        content: '{{ base64_manifest | b64decode }}'
      delegate_to: localhost
      become: false
      when: base64_manifest is defined
    - name: unable to load base64_manifest
      debug:
        msg: 'No base64_manifest variable found, trying to open manifest.zip'
      when: base64_manifest is undefined
    - name: Load manifest into variable
      local_action:
        module: slurp
        src: "{{ playbook_dir }}/manifest.zip"
      register: manifest_file
      become: false

- name: Post manifest file
  uri:
    url: https://localhost/api/v2/config/
    method: POST
    user: admin
    password: "{{ admin_password }}"
    body: '{ "eula_accepted": true, "manifest": "{{ manifest_file.content }}" }'
    body_format: json
    validate_certs: false
    force_basic_auth: true
  register: license_controller
  until: license_controller is not failed
  retries: 5